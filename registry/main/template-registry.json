{
  "templates": [
    {
      "id": "nextjs-supabase",
      "name": "Next.js + Supabase",
      "description": "Full-stack Next.js app with Supabase database",
      "repository": "https://github.com/mxn2020/template-nextjs-supabase",
      "branch": "main",
      "stack": [
        "Next.js",
        "Supabase",
        "TypeScript",
        "Tailwind CSS"
      ],
      "features": [
        "Authentication with Supabase Auth",
        "PostgreSQL database with Supabase",
        "Real-time subscriptions",
        "Server-side rendering",
        "API routes",
        "Tailwind CSS styling"
      ],
      "envVars": [
        "NEXT_PUBLIC_SUPABASE_URL",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY",
        "SUPABASE_SERVICE_KEY"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "pnpm deploy",
      "documentation": "https://github.com/mxn2020/template-nextjs-supabase/blob/main/README.md",
      "tags": [
        "fullstack",
        "database",
        "auth",
        "ssr",
        "popular"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2024-03-15T10:00:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "vite-react-mongo",
      "name": "Vite + React + MongoDB + BetterAuth",
      "description": "Modern React app with Vite, MongoDB and BetterAuth",
      "repository": "https://github.com/mxn2020/geenius-template-vite-react-mongo",
      "branch": "main",
      "stack": [
        "Vite",
        "React",
        "MongoDB",
        "TypeScript",
        "Netlify Functions",
        "BetterAuth"
      ],
      "features": [
        "Fast development with Vite",
        "MongoDB Atlas integration",
        "Netlify Functions for API",
        "React 18 with hooks",
        "TypeScript support",
        "Hot module replacement",
        "BetterAuth integration"
      ],
      "envVars": [
        "DATABASE_URL",
        "MONGODB_URI",
        "VITE_APP_URL",
        "VITE_APP_NAME",
        "VITE_APP_VERSION",
        "VITE_APP_DESCRIPTION",
        "VITE_API_URL",
        "VITE_API_BASE_URL",
        "NETLIFY_FUNCTIONS_URL",
        "NODE_ENV",
        "PORT",
        "JWT_SECRET",
        "CORS_ORIGIN",
        "RATE_LIMIT_WINDOW_MS",
        "RATE_LIMIT_MAX_REQUESTS",
        "VITE_GEENIUS_API_URL",
        "BETTER_AUTH_SECRET",
        "BETTER_AUTH_URL"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "netlify deploy --prod",
      "documentation": "https://github.com/mxn2020/geenius-template-vite-react-mongo/blob/main/README.md",
      "tags": [
        "frontend",
        "nosql",
        "serverless",
        "fast"
      ],
      "difficulty": "beginner",
      "lastUpdated": "2024-03-14T15:30:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "react-indexeddb-jwt",
      "name": "React + IndexedDB + JWT",
      "description": "Client-side React app with IndexedDB storage and JWT auth",
      "repository": "https://github.com/mxn2020/template-react-indexeddb-jwt",
      "branch": "main",
      "stack": [
        "React",
        "IndexedDB",
        "JWT",
        "TypeScript",
        "Vite"
      ],
      "features": [
        "Client-side only application",
        "IndexedDB for persistent storage",
        "JWT authentication",
        "Offline capability",
        "PWA support"
      ],
      "envVars": [
        "VITE_JWT_SECRET",
        "VITE_API_URL"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "pnpm deploy",
      "documentation": "https://github.com/mxn2020/template-react-indexeddb-jwt/blob/main/README.md",
      "tags": [
        "client-side",
        "offline",
        "pwa",
        "auth"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2024-03-13T09:15:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "vue-pinia-firebase",
      "name": "Vue 3 + Pinia + Firebase",
      "description": "Vue 3 app with Pinia state management and Firebase backend",
      "repository": "https://github.com/mxn2020/template-vue-pinia-firebase",
      "branch": "main",
      "stack": [
        "Vue 3",
        "Pinia",
        "Firebase",
        "TypeScript",
        "Vite"
      ],
      "features": [
        "Vue 3 with Composition API",
        "Pinia for state management",
        "Firebase Authentication",
        "Firestore database",
        "Cloud Functions",
        "Real-time updates"
      ],
      "envVars": [
        "VITE_FIREBASE_API_KEY",
        "VITE_FIREBASE_PROJECT_ID",
        "VITE_FIREBASE_APP_ID"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "firebase deploy",
      "documentation": "https://github.com/mxn2020/template-vue-pinia-firebase/blob/main/README.md",
      "tags": [
        "vue",
        "firebase",
        "realtime",
        "state-management"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2024-03-12T14:20:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "svelte-drizzle-planetscale",
      "name": "SvelteKit + Drizzle + PlanetScale",
      "description": "SvelteKit app with Drizzle ORM and PlanetScale database",
      "repository": "https://github.com/mxn2020/template-svelte-drizzle-planetscale",
      "branch": "main",
      "stack": [
        "SvelteKit",
        "Drizzle ORM",
        "PlanetScale",
        "TypeScript",
        "Tailwind CSS"
      ],
      "features": [
        "SvelteKit full-stack framework",
        "Drizzle ORM for type-safe queries",
        "PlanetScale edge database",
        "Server-side rendering",
        "API routes",
        "Edge deployment ready"
      ],
      "envVars": [
        "DATABASE_URL",
        "PLANETSCALE_TOKEN"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "pnpm deploy",
      "documentation": "https://github.com/mxn2020/template-svelte-drizzle-planetscale/blob/main/README.md",
      "tags": [
        "svelte",
        "orm",
        "edge",
        "modern"
      ],
      "difficulty": "advanced",
      "lastUpdated": "2024-03-11T11:45:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "astro-content-collections",
      "name": "Astro + Content Collections",
      "description": "Static site with Astro, content collections, and MDX",
      "repository": "https://github.com/mxn2020/template-astro-content-collections",
      "branch": "main",
      "stack": [
        "Astro",
        "Content Collections",
        "MDX",
        "TypeScript",
        "Tailwind CSS"
      ],
      "features": [
        "Static site generation",
        "Content collections",
        "MDX support",
        "TypeScript integration",
        "SEO optimized",
        "Fast performance"
      ],
      "envVars": [
        "SITE_URL",
        "CONTENT_DIR"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "pnpm deploy",
      "documentation": "https://github.com/mxn2020/template-astro-content-collections/blob/main/README.md",
      "tags": [
        "static",
        "content",
        "seo",
        "performance"
      ],
      "difficulty": "beginner",
      "lastUpdated": "2024-03-10T16:30:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "express-prisma-postgres",
      "name": "Express + Prisma + PostgreSQL",
      "description": "Express.js API with Prisma ORM and PostgreSQL database",
      "repository": "https://github.com/mxn2020/template-express-prisma-postgres",
      "branch": "main",
      "stack": [
        "Express.js",
        "Prisma",
        "PostgreSQL",
        "TypeScript",
        "JWT"
      ],
      "features": [
        "Express.js REST API",
        "Prisma ORM integration",
        "PostgreSQL database",
        "JWT authentication",
        "TypeScript support",
        "API documentation"
      ],
      "envVars": [
        "DATABASE_URL",
        "JWT_SECRET",
        "PORT"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "pnpm deploy",
      "documentation": "https://github.com/mxn2020/template-express-prisma-postgres/blob/main/README.md",
      "tags": [
        "backend",
        "api",
        "database",
        "auth"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2024-03-09T13:10:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    },
    {
      "id": "remix-sqlite-auth",
      "name": "Remix + SQLite + Auth",
      "description": "Remix full-stack app with SQLite database and built-in authentication",
      "repository": "https://github.com/mxn2020/template-remix-sqlite-auth",
      "branch": "main",
      "stack": [
        "Remix",
        "SQLite",
        "Prisma",
        "TypeScript",
        "Tailwind CSS"
      ],
      "features": [
        "Remix full-stack framework",
        "SQLite database",
        "Built-in authentication",
        "Progressive enhancement",
        "Server-side rendering",
        "Web standards focus"
      ],
      "envVars": [
        "DATABASE_URL",
        "SESSION_SECRET"
      ],
      "testCommand": "pnpm test",
      "buildCommand": "pnpm build",
      "devCommand": "pnpm dev",
      "deployCommand": "pnpm deploy",
      "documentation": "https://github.com/mxn2020/template-remix-sqlite-auth/blob/main/README.md",
      "tags": [
        "remix",
        "sqlite",
        "auth",
        "fullstack"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2024-03-08T08:25:00Z",
      "maintainer": "geenius",
      "license": "MIT"
    }
  ],
  "categories": [
    {
      "id": "fullstack",
      "name": "Full-Stack Applications",
      "description": "Complete applications with frontend and backend",
      "templates": [
        "nextjs-supabase",
        "remix-sqlite-auth",
        "svelte-drizzle-planetscale"
      ]
    },
    {
      "id": "frontend",
      "name": "Frontend Applications",
      "description": "Client-side applications and SPAs",
      "templates": [
        "vite-react-mongo",
        "react-indexeddb-jwt",
        "vue-pinia-firebase"
      ]
    },
    {
      "id": "backend",
      "name": "Backend APIs",
      "description": "Server-side APIs and services",
      "templates": [
        "express-prisma-postgres"
      ]
    },
    {
      "id": "static",
      "name": "Static Sites",
      "description": "Static site generators and JAMstack",
      "templates": [
        "astro-content-collections"
      ]
    },
    {
      "id": "popular",
      "name": "Popular Templates",
      "description": "Most commonly used templates",
      "templates": [
        "nextjs-supabase",
        "vite-react-mongo",
        "react-indexeddb-jwt"
      ]
    }
  ],
  "providers": [
    {
      "id": "anthropic",
      "name": "Anthropic (Claude)",
      "description": "Best for coding and technical tasks",
      "models": [
        "claude-sonnet-4-20250514",
        "claude-opus-4-20250514",
        "claude-3-7-sonnet-20250219",
        "claude-3-5-sonnet-20241022",
        "claude-3-5-haiku-20241022",
        "claude-3-5-sonnet-20240620",
        "claude-3-opus-20240229",
        "claude-3-sonnet-20240229",
        "claude-3-haiku-20240307"
      ]
    },
    {
      "id": "openai",
      "name": "OpenAI (GPT)",
      "description": "Most versatile, great for general development",
      "models": [
        "gpt-4-turbo",
        "gpt-4",
        "gpt-3.5-turbo"
      ]
    },
    {
      "id": "google",
      "name": "Google (Gemini)",
      "description": "Creative problem solving and analysis",
      "models": [
        "gemini-pro",
        "gemini-pro-vision",
        "gemini-ultra"
      ]
    },
    {
      "id": "grok",
      "name": "X.AI (Grok)",
      "description": "Fast responses with unique perspectives",
      "models": [
        "grok-beta",
        "grok-1"
      ]
    }
  ],
  "meta": {
    "lastUpdated": "2024-03-15T12:00:00Z",
    "version": "1.0.0",
    "totalTemplates": 8,
    "registry": "https://registry.geenius.com"
  }
}